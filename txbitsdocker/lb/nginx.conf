user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    # Redirect everything to HTTPS and all subdomains (or the root) to the frontend
    server {
        listen 80;
        server_name localhost *.localhost;
        rewrite ^ https://localhost$request_uri? permanent;
    }

    upstream frontend {
# multiple servers can be listed here
      server txbitsdocker_frontend_1:80;
    }

    server {
        listen 443;
        server_name localhost;

        ssl on;
        ssl_certificate                 /secrets/webserver.pem;
        ssl_certificate_key             /secrets/webserver-key.pem;
        ssl_dhparam                     /secrets/dhparam.pem;

        # enable session resumption to improve https performance
        # http://vincent.bernat.im/en/blog/2011-ssl-session-reuse-rfc5077.html
        ssl_session_cache shared:SSL:50m;
        ssl_session_timeout 5m;

        # enables server-side protection from BEAST attacks
        # http://blog.ivanristic.com/2013/09/is-beast-still-a-threat.html
        ssl_prefer_server_ciphers       on;

        # disable SSLv3(enabled by default since nginx 0.8.19) since it's less secure then TLS http://en.wikipedia.org/wiki/Secure_Sockets_Layer#SSL_3.0
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

        # ciphers chosen for forward secrecy and compatibility
        # https://www.eff.org/deeplinks/2015/04/effs-updated-ssl-configuration
        ssl_ciphers                     ECDH+AESGCM:ECDH+AES256:ECDH+AES128:ECDH+3DES:DHE-RSA-AES128-SHA:RSA+AES:RSA+3DES:!ADH:!AECDH:!MD5:!DSS;

        # HSTS
        add_header Strict-Transport-Security "max-age=31536000";

        # TODO:
        # static content (with client-side caching enabled)
        #location /assets/ {
        #    access_log  off;
        #    log_not_found off;
        #    add_header  Pragma "public";
        #    add_header  Cache-Control "public";
        #    expires     30d;
        #    alias /var/example/target/scala-2.10/classes/public/;
        #}

        # serve assets or request page from proxy (if asset not found)
        location / {
            try_files $uri @proxy;
        }

        # the play web server
        location @proxy {
            proxy_pass  http://frontend;
            proxy_redirect off;
            proxy_buffering off;

            #send protocol info to play server
            proxy_set_header        Host               $host;
            proxy_set_header        X-Real-IP          $remote_addr;
            proxy_set_header        X-Forwarded-Proto  https;
            proxy_set_header        X-Forwarded-Ssl    on;
            proxy_set_header        X-Forwarded-For    $proxy_add_x_forwarded_for;
        }
    }
}
